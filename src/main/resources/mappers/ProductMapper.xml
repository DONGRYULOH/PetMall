<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dongmall.shop.dao.ShopDao">
	
	
	<!-- 카테고리별 상품리스트  -->
	<select id="cateProductList" parameterType="String" resultType="kr.or.dongmall.main.dto.ProductCateDto">
			select product_number,product_name,product_category,product_price,product_stock,product_desc,product_ThumbImg,c.category_name
			from product p 
			inner join product_category c 
			on p.product_category = c.category_code
			where p.product_category = #{categoryNumber}
	</select> 
	
	<!-- 전체 상품리스트 -->
	<select id="AllcateProductList" resultType="kr.or.dongmall.main.dto.ProductCateDto">
			select product_number,product_name,product_category,product_price,product_stock,product_desc,product_ThumbImg
			from product
	</select> 
	
	<!-- 해당상품 조회 -->
	<select id="shopDetail" resultType="kr.or.dongmall.main.dto.ProductCateDto">
			select product_number,product_name,product_category,product_price,product_stock,product_desc,product_ThumbImg
			from product
			where product_number = #{product_number}
	</select> 
	
	<!-- 해당 상품 조회시 조회수 1증가 -->
	<insert id="productViewCount" >
		update product set product_hits = product_hits+1 
		where product_number = #{product_number}
	</insert>
	
	<!-- *****************  댓글 관련 쿼리문 ************************************************************ -->
	<!-- 상품 소감(댓글) 작성 -->
	<insert id="replyInsert" parameterType="kr.or.dongmall.shop.dto.ProductReply" >
		insert into reply(product_number,reply_content,reply_writer,origin_ref,group_ord,group_layer) 
		values(#{product_number},#{reply_content},#{reply_writer},0,0,0)
	</insert>
	
	<!-- 상품 소감(댓글) 작성후 ref값 변경  -->
	<update id="replyInsert_ref" parameterType="kr.or.dongmall.shop.dto.ProductReply" keyProperty="reply_num">
		<selectKey order ="BEFORE" keyProperty="reply_num" resultType="int">
   			select max(reply_num) 
   			from reply 
   			where product_number = #{product_number};
   		</selectKey>
		update reply 
		set origin_ref = #{reply_num}
		where reply_num = #{reply_num};
	</update>
	
	<!-- 상품 댓글 리스트 -->
	<select id="replyList" resultType="kr.or.dongmall.shop.dto.ProductReply">
		select r.product_number,r.reply_writer,r.reply_num,r.reply_content,r.reply_date,r.origin_ref,r.group_ord,r.group_layer,m.user_name 
		from reply r inner join member m 
		on r.reply_writer = m.user_id 
		where r.product_number = #{product_number}
		order by r.origin_ref desc ,
		field(r.group_ord,0) desc , r.group_ord desc
	</select>
	
	<!-- 상품 댓글 삭제 -->
	<delete id="replyDelete">
		delete from reply 
			<choose>
			<when test="group_layer == 0">
		   	where origin_ref=#{origin_ref}
		   	</when>
		   	<when test="group_layer == 1">
		   	where reply_num=#{reply_num}
		   	</when>
		   	</choose>
	</delete>
	
	<!-- 상품 댓글 수정 -->
	<delete id="replyModify">
		update reply
		set reply_content = #{reply_content}
		where reply_num = #{reply_num}
	</delete>
	
	<!-- 상품 답글 작성 -->
	<insert id="reCmtInsert" parameterType="kr.or.dongmall.shop.dto.ProductReply" useGeneratedKeys="true" keyProperty="group_ord">
		<selectKey order ="BEFORE" keyProperty="group_ord" resultType="int">
   				select MAX(group_ord)+1
   				from reply
   				where origin_ref = #{origin_ref} and product_number = #{product_number}
   		</selectKey>
		insert into reply(product_number,reply_content,reply_writer,origin_ref,group_ord,group_layer) 
		values(#{product_number},#{reply_content},#{reply_writer},#{origin_ref},#{group_ord},1)
	</insert>
	<!-- *****************  댓글 관련 쿼리문 END************************************************************ -->
	
	
	
	<!-- 장바구니 담기  -->
	<insert id="addCart">
		insert into cart(product_number,user_id,cart_stock)
		values(#{product_number},#{user_id},#{cart_stock})
	</insert>
	
	<!-- 장바구니 리스트 -->
	<!-- 설마 select 해서 얻어와서 DTO에 넣어줄라면 DTO에 있는 순서랑 똑같아야되나??-->
	<select id="cartList" resultType="kr.or.dongmall.shop.dto.CartDto">
		select c.cart_num,c.product_number,c.user_id,c.cart_stock,p.product_name,p.product_price,p.product_ThumbImg
		from cart c join product p using(product_number)
		where c.user_id = #{user_id}
		order by c.cart_num desc
	</select>
	
	<!-- 장바구니 물품 총액수 -->	
	<select id="cartTotal" resultType="int">
		select coalesce(sum(c.cart_stock * p.product_price),0)  as 'total'
		from cart c join product p 
		ON c.product_number = p.product_number
		where c.user_id = #{user_id}
	</select>
	
	<!-- 장바구니 물품 삭제 -->
	<delete id="cartDelete">
		delete 
		from cart 
		where cart_num = #{cart_num}
	</delete>
	
	<!-- 장바구니 물품 수량 수정  -->
	<update id="cartUpdate" parameterType="HashMap">
		update cart  
		set cart_stock = #{cart_stock}
		where cart_num = #{cart_num}
	</update>
	
	<!-- ********************************************** 비회원시 장바구니 *************** -->
	
	
	<!-- 장바구니에 있는 모든 아이디 가져오기 -->
	<select id="all_id" resultType="kr.or.dongmall.shop.dto.CartDto">
		select user_id 
		from cart
	</select>
</mapper>























